
@{

    Layout = "~/Views/Shared/Layout.cshtml";
}

<h2>Cadastrar Novo Produto</h2>
<hr />

@model Projeto.Presentation.Models.ProdutoCadastroModel

<div>

    @using (Html.BeginForm())
    {
        <div class="form-group">
            <label>Nome do Produto </label>
            @Html.TextBoxFor(model => model.Nome, new { @class = "form-control col-md-4" })
            <span class="text-danger">
                @Html.ValidationMessageFor(model => model.Nome)
            </span>
        </div>

        <div class="form-group">
            <label>Preço do Produto </label>
            @Html.TextBoxFor(model => model.Preco, new { @class = "form-control col-md-4" })
            <span class="text-danger">
                @Html.ValidationMessageFor(model => model.Preco)
            </span>
        </div>

        <div class="form-group">
            <label>Quantidade do Produto </label>
            @Html.TextBoxFor(model => model.Quantidade, new { @class = "form-control col-md-4" })
            <span class="text-danger">
                @Html.ValidationMessageFor(model => model.Quantidade)
            </span>
        </div>

        <div class="form-group">
            <label>Selecione o Estoque </label>
            @Html.DropDownListFor(model => model.IdEstoque, Model.Estoques,"Escolha uma opção",new {@class = "form-control col-md-4" })
            <span class="text-danger">
                @Html.ValidationMessageFor(model => model.IdEstoque)
            </span>
        </div>


        <div>

            <input class="btn btn-primary" type="submit" value="Cadastrar Produto" />

        </div>


    }
</div>

@{
    try
    {

        if (TempData["Mensagem"].ToString() != "")
        {
            <div class="alert alert-dismissible alert-success">
                <button type="button" class="close" data-dismiss="alert">&times;</button>
                <strong>Atenção!</strong> <p>  @TempData["Mensagem"] </p>
            </div>
        }
    }
    catch { }
}



